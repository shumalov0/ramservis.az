// Rezervasiya idar…ôetm…ô sistemi
import { 
  sendInitialConfirmation, 
  sendBusinessNotification, 
  SimpleBookingData 
} from './simple-email-system';
import { getEmailValidationMessage } from './email-validation';

export interface BookingResult {
  success: boolean;
  confirmationNumber?: string;
  message: string;
  error?: string;
}

// Rezervasiya m…ôlumatlarƒ±nƒ± i≈ül…ôm…ôk
export async function handleBookingSubmission(
  formData: any,
  carDetails: any,
  language: 'az' | 'en' | 'ru' = 'az'
): Promise<BookingResult> {
  try {
    // Email validasiya
    const emailValidationError = getEmailValidationMessage(formData.email, language);
    if (emailValidationError) {
      throw new Error(emailValidationError);
    }

    // Form m…ôlumatlarƒ±nƒ± sad…ôl…ô≈üdir
    const bookingData: SimpleBookingData = {
      firstName: formData.firstName,
      lastName: formData.lastName,
      email: formData.email,
      phone: formData.phone,
      carId: carDetails.id || 'unknown',
      carBrand: carDetails.brand || 'Unknown',
      carModel: carDetails.model || 'Unknown',
      pickupDate: formData.pickupDate,
      dropoffDate: formData.dropoffDate,
      pickupLocation: formData.pickupLocation,
      dropoffLocation: formData.dropoffLocation,
      totalDays: formData.totalDays || 1,
      totalPrice: formData.totalPrice || 0,
      additionalServices: formData.additionalServices || [],
      specialRequests: formData.specialRequests || '',
      paymentMethod: formData.paymentMethod || 'cash', // √ñd…ôni≈ü metodu …ôlav…ô et
    };

    console.log('üìß Rezervasiya emaill…ôri g√∂nd…ôrilir...');

    // 1. M√º≈üt…ôriy…ô ilkin t…ôsdiq g√∂nd…ôr
    const customerResult = await sendInitialConfirmation(bookingData, language);
    
    if (!customerResult.success) {
      throw new Error(`M√º≈üt…ôri emaili g√∂nd…ôrilm…ôdi: ${customerResult.error}`);
    }

    const confirmationNumber = customerResult.confirmationNumber!;

    // 2. Biznes…ô bildiri≈ü g√∂nd…ôr
    const businessResult = await sendBusinessNotification(bookingData, confirmationNumber);
    
    if (!businessResult.success) {
      console.warn('‚ö†Ô∏è Biznes emaili g√∂nd…ôrilm…ôdi:', businessResult.error);
      // M√º≈üt…ôri emaili g√∂nd…ôrildiyin…ô g√∂r…ô, bu x…ôta kritik deyil
    }

    // 3. Rezervasiyanƒ± veril…ônl…ôr bazasƒ±na …ôlav…ô et (g…ôl…ôc…ôkd…ô)
    // await saveBookingToDatabase(bookingData, confirmationNumber);

    console.log(`‚úÖ Rezervasiya uƒüurla yaradƒ±ldƒ±: ${confirmationNumber}`);

    return {
      success: true,
      confirmationNumber,
      message: getSuccessMessage(language, confirmationNumber),
    };

  } catch (error) {
    console.error('‚ùå Rezervasiya x…ôtasƒ±:', error);
    
    return {
      success: false,
      error: error instanceof Error ? error.message : 'Nam…ôlum x…ôta',
      message: getErrorMessage(language),
    };
  }
}

// Uƒüur mesajƒ±
function getSuccessMessage(language: 'az' | 'en' | 'ru', confirmationNumber: string): string {
  const messages = {
    az: `üéâ Rezervasiyanƒ±z uƒüurla q…ôbul edildi!\n\nT…ôsdiq n√∂mr…ôsi: ${confirmationNumber}\n\nMa≈üƒ±nƒ±n m√∂vcudluƒüunu yoxlayƒ±b, √∂d…ôni≈ü linki g√∂nd…ôr…ôc…ôyik.\n\nEmail yoxlamaƒüƒ± unutmayƒ±n!`,
    en: `üéâ Your booking has been successfully received!\n\nConfirmation number: ${confirmationNumber}\n\nWe will check car availability and send payment link.\n\nDon't forget to check your email!`,
    ru: `üéâ –í–∞—à–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–æ!\n\n–ù–æ–º–µ—Ä –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: ${confirmationNumber}\n\n–ú—ã –ø—Ä–æ–≤–µ—Ä–∏–º –Ω–∞–ª–∏—á–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è –∏ –æ—Ç–ø—Ä–∞–≤–∏–º —Å—Å—ã–ª–∫—É –¥–ª—è –æ–ø–ª–∞—Ç—ã.\n\n–ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É!`
  };

  return messages[language];
}

// X…ôta mesajƒ±
function getErrorMessage(language: 'az' | 'en' | 'ru'): string {
  const messages = {
    az: '‚ùå Rezervasiya zamanƒ± x…ôta ba≈ü verdi. Z…ôhm…ôt olmasa yenid…ôn c…ôhd edin v…ô ya biziml…ô …ôlaq…ô saxlayƒ±n.',
    en: '‚ùå An error occurred during booking. Please try again or contact us.',
    ru: '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏.'
  };

  return messages[language];
}

