// Sad…ôl…ô≈üdirilmi≈ü Email Sistemi - Manual ƒ∞dar…ôetm…ô √º√ß√ºn
import emailjs from '@emailjs/browser';

// EmailJS-i initialize et
if (typeof window !== 'undefined') {
  emailjs.init(process.env.NEXT_PUBLIC_EMAILJS_PUBLIC_KEY || '');
}

export interface SimpleBookingData {
  firstName: string;
  lastName: string;
  email: string;
  phone: string;
  carId: string;
  carBrand: string;
  carModel: string;
  pickupDate: string;
  dropoffDate: string;
  pickupLocation: string;
  dropoffLocation: string;
  totalDays: number;
  totalPrice: number;
  additionalServices?: string[];
  specialRequests?: string;
  paymentMethod?: 'cash' | 'online';
}

export interface EmailResult {
  success: boolean;
  error?: string;
  confirmationNumber?: string;
}

// T…ôsdiq n√∂mr…ôsi yaratmaq
export function generateConfirmationNumber(): string {
  const timestamp = Date.now().toString().slice(-6);
  const random = Math.random().toString(36).substring(2, 5).toUpperCase();
  return `RS${timestamp}${random}`;
}

// 1. M√º≈üt…ôriy…ô ilkin t…ôsdiq emaili (√∂d…ôni≈ü linki olmadan)
export async function sendInitialConfirmation(
  bookingData: SimpleBookingData,
  language: 'az' | 'en' | 'ru' = 'az'
): Promise<EmailResult> {
  try {
    console.log('üîß EmailJS konfiqurasiyasƒ± yoxlanƒ±lƒ±r...');
    
    // Konfiqurasiya yoxlanƒ±≈üƒ±
    const serviceId = process.env.NEXT_PUBLIC_EMAILJS_SERVICE_ID;
    const publicKey = process.env.NEXT_PUBLIC_EMAILJS_PUBLIC_KEY;
    const templateId = process.env.NEXT_PUBLIC_EMAILJS_TEMPLATE_CUSTOMER;
    
    console.log('üìã Konfiqurasiya:', {
      serviceId: serviceId ? '‚úÖ' : '‚ùå',
      publicKey: publicKey ? '‚úÖ' : '‚ùå',
      templateId: templateId ? '‚úÖ' : '‚ùå'
    });
    
    if (!serviceId || !publicKey || !templateId) {
      throw new Error('EmailJS konfiqurasiyasƒ± natamam. .env.local faylƒ±nƒ± yoxlayƒ±n.');
    }
    
    const confirmationNumber = generateConfirmationNumber();
    console.log('üìß T…ôsdiq n√∂mr…ôsi yaradƒ±ldƒ±:', confirmationNumber);
    
    const emailContent = getInitialConfirmationContent(bookingData, confirmationNumber, language);
    
    const templateParams = {
      to_email: bookingData.email,
      to_name: `${bookingData.firstName} ${bookingData.lastName}`,
      subject: emailContent.subject,
      message: emailContent.message,
      confirmation_number: confirmationNumber,
      car_info: `${bookingData.carBrand} ${bookingData.carModel}`,
      pickup_date: bookingData.pickupDate,
      dropoff_date: bookingData.dropoffDate,
      total_price: bookingData.totalPrice,
      company_name: 'Ram Servis',
      company_phone: process.env.NEXT_PUBLIC_COMPANY_PHONE || '+994707004444',
    };
    
    console.log('üì® Email parametrl…ôri:', templateParams);
    console.log('üéØ Biznes emaili:', process.env.BUSINESS_EMAIL);
    console.log('üöÄ EmailJS-…ô g√∂nd…ôrilir...');

    const result = await emailjs.send(
      serviceId,
      templateId,
      templateParams,
      publicKey
    );
    
    console.log('‚úÖ EmailJS cavabƒ±:', result);

    return {
      success: true,
      confirmationNumber,
    };
  } catch (error) {
    console.error('‚ùå ƒ∞lkin t…ôsdiq emaili x…ôtasƒ±:', error);
    return {
      success: false,
      error: error instanceof Error ? error.message : 'Nam…ôlum x…ôta',
    };
  }
}

// 2. Biznes…ô yeni rezervasiya bildiri≈üi
export async function sendBusinessNotification(
  bookingData: SimpleBookingData,
  confirmationNumber: string
): Promise<EmailResult> {
  try {
    console.log('üè¢ Biznes emaili g√∂nd…ôrilir...');
    console.log('üéØ H…ôd…ôf email:', process.env.BUSINESS_EMAIL || 'info@ramservis.az');
    
    const templateParams = {
      to_email: 'info@ramservis.az', // Birba≈üa hardcode
      subject: `üöó Yeni Rezervasiya - ${confirmationNumber}`,
      customer_name: `${bookingData.firstName} ${bookingData.lastName}`,
      customer_email: bookingData.email,
      customer_phone: bookingData.phone,
      car_info: `${bookingData.carBrand} ${bookingData.carModel}`,
      pickup_date: bookingData.pickupDate,
      dropoff_date: bookingData.dropoffDate,
      pickup_location: bookingData.pickupLocation,
      dropoff_location: bookingData.dropoffLocation,
      total_days: bookingData.totalDays,
      total_price: bookingData.totalPrice,
      payment_method: bookingData.paymentMethod === 'cash' ? 'Naƒüd' : 'Online',
      additional_services: bookingData.additionalServices?.join(', ') || 'Yoxdur',
      special_requests: bookingData.specialRequests || 'Yoxdur',
      confirmation_number: confirmationNumber,
    };

    await emailjs.send(
      process.env.NEXT_PUBLIC_EMAILJS_SERVICE_ID!,
      process.env.NEXT_PUBLIC_EMAILJS_TEMPLATE_BUSINESS!,
      templateParams,
      process.env.NEXT_PUBLIC_EMAILJS_PUBLIC_KEY!
    );

    return { success: true };
  } catch (error) {
    console.error('Biznes bildiri≈üi g√∂nd…ôrilm…ôdi:', error);
    return {
      success: false,
      error: error instanceof Error ? error.message : 'Nam…ôlum x…ôta',
    };
  }
}

// 3. M√º≈üt…ôriy…ô √∂d…ôni≈ü linki g√∂nd…ôrm…ôk (manual)
export async function sendPaymentLink(
  customerEmail: string,
  customerName: string,
  confirmationNumber: string,
  paymentLink: string,
  totalAmount: number,
  language: 'az' | 'en' | 'ru' = 'az'
): Promise<EmailResult> {
  try {
    const emailContent = getPaymentEmailContent(
      customerName,
      confirmationNumber,
      paymentLink,
      totalAmount,
      language
    );

    const templateParams = {
      to_email: customerEmail,
      to_name: customerName,
      subject: emailContent.subject,
      message: emailContent.message,
      confirmation_number: confirmationNumber,
      total_amount: totalAmount,
      company_name: 'Ram Servis',
      company_phone: process.env.NEXT_PUBLIC_COMPANY_PHONE || '+994707004444',
    };

    // M√º≈üt…ôri template-ini istifad…ô edirik (√∂d…ôni≈ü linki √º√ß√ºn ayrƒ± template yoxdur)
    await emailjs.send(
      process.env.NEXT_PUBLIC_EMAILJS_SERVICE_ID!,
      process.env.NEXT_PUBLIC_EMAILJS_TEMPLATE_CUSTOMER!,
      templateParams,
      process.env.NEXT_PUBLIC_EMAILJS_PUBLIC_KEY!
    );

    return { success: true };
  } catch (error) {
    console.error('√ñd…ôni≈ü linki g√∂nd…ôrilm…ôdi:', error);
    return {
      success: false,
      error: error instanceof Error ? error.message : 'Nam…ôlum x…ôta',
    };
  }
}

// ƒ∞lkin t…ôsdiq email m…ôzmunu
function getInitialConfirmationContent(
  bookingData: SimpleBookingData,
  confirmationNumber: string,
  language: 'az' | 'en' | 'ru'
) {
  const content = {
    az: {
      subject: `üöó Rezervasiya Q…ôbul Edildi - ${confirmationNumber}`,
      message: `
H√∂rm…ôtli ${bookingData.firstName} ${bookingData.lastName},

Rezervasiyanƒ±z uƒüurla q…ôbul edildi!

üìã Rezervasiya M…ôlumatlarƒ±:
‚Ä¢ T…ôsdiq N√∂mr…ôsi: ${confirmationNumber}
‚Ä¢ Ma≈üƒ±n: ${bookingData.carBrand} ${bookingData.carModel}
‚Ä¢ G√∂t√ºrm…ô Tarixi: ${bookingData.pickupDate}
‚Ä¢ Qaytarma Tarixi: ${bookingData.dropoffDate}
‚Ä¢ G√∂t√ºrm…ô Yeri: ${bookingData.pickupLocation}
‚Ä¢ Qaytarma Yeri: ${bookingData.dropoffLocation}
‚Ä¢ √úmumi M…ôbl…ôƒü: ${bookingData.totalPrice} AZN

‚è≥ N√∂vb…ôti Addƒ±mlar:
1. Ma≈üƒ±nƒ±n m√∂vcudluƒüunu yoxlayacaƒüƒ±q
2. T…ôsdiq edildikd…ôn sonra √∂d…ôni≈ü linki g√∂nd…ôr…ôc…ôyik
3. √ñd…ôni≈üd…ôn sonra rezervasiya tam t…ôsdiql…ôn…ôc…ôk

üìû ∆èlaq…ô: ${process.env.NEXT_PUBLIC_COMPANY_PHONE || '+994501234567'}

T…ô≈ü…ôkk√ºrl…ôr,
Ram Servis Komandasƒ±
      `
    },
    en: {
      subject: `üöó Booking Received - ${confirmationNumber}`,
      message: `
Dear ${bookingData.firstName} ${bookingData.lastName},

Your booking has been successfully received!

üìã Booking Details:
‚Ä¢ Confirmation Number: ${confirmationNumber}
‚Ä¢ Car: ${bookingData.carBrand} ${bookingData.carModel}
‚Ä¢ Pickup Date: ${bookingData.pickupDate}
‚Ä¢ Return Date: ${bookingData.dropoffDate}
‚Ä¢ Pickup Location: ${bookingData.pickupLocation}
‚Ä¢ Return Location: ${bookingData.dropoffLocation}
‚Ä¢ Total Amount: ${bookingData.totalPrice} AZN

‚è≥ Next Steps:
1. We will check car availability
2. Payment link will be sent after confirmation
3. Booking will be fully confirmed after payment

üìû Contact: ${process.env.NEXT_PUBLIC_COMPANY_PHONE || '+994501234567'}

Thank you,
Ram Servis Team
      `
    },
    ru: {
      subject: `üöó –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ü–æ–ª—É—á–µ–Ω–æ - ${confirmationNumber}`,
      message: `
–£–≤–∞–∂–∞–µ–º—ã–π ${bookingData.firstName} ${bookingData.lastName},

–í–∞—à–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–æ!

üìã –î–µ—Ç–∞–ª–∏ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:
‚Ä¢ –ù–æ–º–µ—Ä –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: ${confirmationNumber}
‚Ä¢ –ê–≤—Ç–æ–º–æ–±–∏–ª—å: ${bookingData.carBrand} ${bookingData.carModel}
‚Ä¢ –î–∞—Ç–∞ –ü–æ–ª—É—á–µ–Ω–∏—è: ${bookingData.pickupDate}
‚Ä¢ –î–∞—Ç–∞ –í–æ–∑–≤—Ä–∞—Ç–∞: ${bookingData.dropoffDate}
‚Ä¢ –ú–µ—Å—Ç–æ –ü–æ–ª—É—á–µ–Ω–∏—è: ${bookingData.pickupLocation}
‚Ä¢ –ú–µ—Å—Ç–æ –í–æ–∑–≤—Ä–∞—Ç–∞: ${bookingData.dropoffLocation}
‚Ä¢ –û–±—â–∞—è –°—É–º–º–∞: ${bookingData.totalPrice} AZN

‚è≥ –°–ª–µ–¥—É—é—â–∏–µ –®–∞–≥–∏:
1. –ü—Ä–æ–≤–µ—Ä–∏–º –Ω–∞–ª–∏—á–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è
2. –û—Ç–ø—Ä–∞–≤–∏–º —Å—Å—ã–ª–∫—É –¥–ª—è –æ–ø–ª–∞—Ç—ã –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
3. –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –±—É–¥–µ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã

üìû –ö–æ–Ω—Ç–∞–∫—Ç: ${process.env.NEXT_PUBLIC_COMPANY_PHONE || '+994501234567'}

–°–ø–∞—Å–∏–±–æ,
–ö–æ–º–∞–Ω–¥–∞ Ram Servis
      `
    }
  };

  return content[language];
}

// √ñd…ôni≈ü email m…ôzmunu
function getPaymentEmailContent(
  customerName: string,
  confirmationNumber: string,
  paymentLink: string,
  totalAmount: number,
  language: 'az' | 'en' | 'ru'
) {
  const content = {
    az: {
      subject: `üí≥ √ñd…ôni≈ü Linki - ${confirmationNumber}`,
      message: `
H√∂rm…ôtli ${customerName},

Ma≈üƒ±nƒ±n m√∂vcudluƒüu t…ôsdiql…ôndi! ƒ∞ndi √∂d…ôni≈ü ed…ô bil…ôrsiniz.

üí≥ √ñd…ôni≈ü M…ôlumatlarƒ±:
‚Ä¢ T…ôsdiq N√∂mr…ôsi: ${confirmationNumber}
‚Ä¢ √ñd…ônil…ôc…ôk M…ôbl…ôƒü: ${totalAmount} AZN

üîó √ñd…ôni≈ü Linki:
${paymentLink}

‚ö†Ô∏è Qeyd: √ñd…ôni≈ü linkinin m√ºdd…ôti 24 saatdƒ±r.

üìû Suallarƒ±nƒ±z √º√ß√ºn: ${process.env.NEXT_PUBLIC_COMPANY_PHONE || '+994501234567'}

T…ô≈ü…ôkk√ºrl…ôr,
Ram Servis Komandasƒ±
      `
    },
    en: {
      subject: `üí≥ Payment Link - ${confirmationNumber}`,
      message: `
Dear ${customerName},

Car availability confirmed! You can now proceed with payment.

üí≥ Payment Details:
‚Ä¢ Confirmation Number: ${confirmationNumber}
‚Ä¢ Amount to Pay: ${totalAmount} AZN

üîó Payment Link:
${paymentLink}

‚ö†Ô∏è Note: Payment link expires in 24 hours.

üìû For questions: ${process.env.NEXT_PUBLIC_COMPANY_PHONE || '+994501234567'}

Thank you,
Ram Servis Team
      `
    },
    ru: {
      subject: `üí≥ –°—Å—ã–ª–∫–∞ –¥–ª—è –û–ø–ª–∞—Ç—ã - ${confirmationNumber}`,
      message: `
–£–≤–∞–∂–∞–µ–º—ã–π ${customerName},

–ù–∞–ª–∏—á–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –æ–ø–ª–∞—Ç—É.

üí≥ –î–µ—Ç–∞–ª–∏ –û–ø–ª–∞—Ç—ã:
‚Ä¢ –ù–æ–º–µ—Ä –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: ${confirmationNumber}
‚Ä¢ –°—É–º–º–∞ –∫ –û–ø–ª–∞—Ç–µ: ${totalAmount} AZN

üîó –°—Å—ã–ª–∫–∞ –¥–ª—è –û–ø–ª–∞—Ç—ã:
${paymentLink}

‚ö†Ô∏è –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –°—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ 24 —á–∞—Å–∞.

üìû –ü–æ –≤–æ–ø—Ä–æ—Å–∞–º: ${process.env.NEXT_PUBLIC_COMPANY_PHONE || '+994501234567'}

–°–ø–∞—Å–∏–±–æ,
–ö–æ–º–∞–Ω–¥–∞ Ram Servis
      `
    }
  };

  return content[language];
}